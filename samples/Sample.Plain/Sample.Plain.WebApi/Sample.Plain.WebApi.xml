<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sample.Plain.WebApi</name>
    </assembly>
    <members>
        <member name="T:Sample.Plain.WebApi.Controller.AdminController">
            <summary>
            管理员管理
            </summary>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.CreateUserAsync(Sample.Plain.DbService.Sys.Admin.AdminUser.AdminUserCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建管理员账号
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateUserAsync(Sample.Plain.DbService.Sys.Admin.AdminUser.AdminUserUpdateInfoCommand,System.Threading.CancellationToken)">
            <summary>
            更新账号信息
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateUserAsync(Sample.Plain.DbService.Sys.Admin.AdminUser.AdminUserUpdatePasswordCommand,System.Threading.CancellationToken)">
            <summary>
            更新密码
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateUserAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新指定字段内容
            </summary>
            <param name="id">主键id</param>
            <param name="field">字段名</param>
            <param name="value">新值</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateUserAsync(System.Int64[],Sample.Plain.Core.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新状态
            </summary>
            <param name="ids">id集合</param>
            <param name="status">数据状态</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.DeleteUserAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除账号（物理删除）
            </summary>
            <param name="ids">id集合</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetUserAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号信息
            </summary>
            <param name="id">主键id</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetUserByAccountAsync(Sample.Plain.Core.Enums.AccountMode,System.String,System.Threading.CancellationToken)">
            <summary>
            获取账号信息（根据账号或手机号码）
            </summary>
            <param name="accountMode">账号类型（1、账号，2、手机）</param>
            <param name="account">账号</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetUserAnyAsync(Sample.Plain.Core.Enums.AccountMode,System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            检查账号或者手机号是否存在
            </summary>
            <param name="accountMode">账号类型（1、账号，2、手机）</param>
            <param name="account">账号</param>
            <param name="notId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetUserPagedAsync(Sample.Plain.DbService.Sys.Admin.AdminUser.AdminUserQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取账号分页
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.CreateUserRelevanceRoleIdAsync(Sample.Plain.DbService.Sys.Admin.AdminUser.AdminUserRelevanceRoleCommand,System.Threading.CancellationToken)">
            <summary>
            账号关联角色
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetUserRelevanceRoleIdsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取账号关联的角色id集合
            </summary>
            <param name="adminId">管理员id</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.CreateRoleAsync(Sample.Plain.DbService.Sys.Admin.AdminRole.AdminRoleCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建角色
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateRoleAsync(Sample.Plain.DbService.Sys.Admin.AdminRole.AdminRoleUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新角色信息
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateRoleAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新角色指定字段内容
            </summary>
            <param name="id">主键id</param>
            <param name="field">字段名</param>
            <param name="value">新值</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateRoleAsync(System.Int64[],Sample.Plain.Core.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新角色状态
            </summary>
            <param name="ids">id集合</param>
            <param name="status">数据状态</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.DeleteRoleAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除角色（物理删除）
            </summary>
            <param name="ids">id集合</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetRoleAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取角色信息
            </summary>
            <param name="id">主键id</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetRoleAllAsync(System.Threading.CancellationToken)">
            <summary>
            获取所有角色
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetRolePagedAsync(Sample.Plain.DbService.Sys.Admin.AdminRole.AdminRoleQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取角色分页
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetRoleRelevanceMenuIdsAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            获取角色关联的所有导航id集合
            </summary>
            <param name="roleId">角色id</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.CreateMenuAsync(Sample.Plain.DbService.Sys.Admin.AdminMenu.AdminMenuCreateCommand,System.Threading.CancellationToken)">
            <summary>
            创建导航
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateMenuAsync(Sample.Plain.DbService.Sys.Admin.AdminMenu.AdminMenuUpdateCommand,System.Threading.CancellationToken)">
            <summary>
            更新导航信息
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateMenuAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            更新导航指定字段内容
            </summary>
            <param name="id">主键id</param>
            <param name="field">字段名</param>
            <param name="value">新值</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.UpdateMenuAsync(System.Int64[],Sample.Plain.Core.Enums.Status,System.Threading.CancellationToken)">
            <summary>
            更新导航状态
            </summary>
            <param name="ids">id集合</param>
            <param name="status">数据状态</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.DeleteMenuAsync(System.Int64[],System.Threading.CancellationToken)">
            <summary>
            删除导航（物理删除）
            </summary>
            <param name="ids">id集合</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetMenuAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取导航信息
            </summary>
            <param name="id">主键id</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetMenuByTreeAsync(System.Threading.CancellationToken)">
            <summary>
            获取导航树形结构
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.AdminController.GetMenuByWeightAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            获取导航列表
            </summary>
            <param name="isMenu">是否是导航</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="F:Sample.Plain.WebApi.Controller.ApiControllerBase._logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="T:Sample.Plain.WebApi.Controller.Filters.ApiErrorAttribute">
            <summary>
            API错误日志过滤器
            </summary>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.Filters.ApiErrorAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            异常处理
            </summary>
            <param name="context">异常上下文</param>
        </member>
        <member name="T:Sample.Plain.WebApi.Controller.LoginController">
            <summary>
            管理员登录接口
            </summary>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.LoginController.LoginAsync(Sample.Plain.DbService.Sys.Admin.AdminUser.AdminUserLoginCommand,System.Threading.CancellationToken)">
            <summary>
            管理员登录
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.LoginController.VerifyTokenAsync(System.Threading.CancellationToken)">
            <summary>
            验证Token
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.LoginController.GetPermissionExistsAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            查询是否有权限
            </summary>
            <param name="adminId">管理员id</param>
            <param name="onlyCode">唯一代码</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.LoginController.GetPermissionMenusAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            查询权限导航
            </summary>
            <param name="adminId">管理员id</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.LoginController.GetPermissionMenuExpressAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            查询权限导航（快捷导航）
            </summary>
            <param name="adminId">管理员id</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.LoginController.GetRecordListAsync(System.Int32,System.Int64,System.Threading.CancellationToken)">
            <summary>
            获取最近登录记录
            </summary>
            <param name="limit">记录数</param>
            <param name="adminId">管理员id</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.LoginController.GetRecordPageAsync(Sample.Plain.DbService.Sys.Admin.LoginRecord.LoginRecordQueryPagedCommand,System.Threading.CancellationToken)">
            <summary>
            获取所有登录记录分页
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Sample.Plain.WebApi.Controller.UploadController">
            <summary>
            文件上传
            </summary>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.UploadController.UploadFile(Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            上传文件
            </summary>
            <param name="formFile"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.UploadController.UploadImage(Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            上传图片
            </summary>
            <param name="formFile"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Sample.Plain.WebApi.Controller.UploadController.UploadBase64(Sample.Plain.Applaction.Upload.Base64Command,System.Threading.CancellationToken)">
            <summary>
            上传图片
            </summary>
            <param name="command"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
    </members>
</doc>
