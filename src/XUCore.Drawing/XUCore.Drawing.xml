<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XUCore.Drawing</name>
    </assembly>
    <members>
        <member name="T:XUCore.Extensions.BitmapExtensions">
            <summary>
            图像(<see cref="T:System.Drawing.Bitmap"/>) 扩展
            </summary>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ToPixelArray2D(System.Drawing.Bitmap)">
            <summary>
            将图像转换为 Color[,]颜色值二维数组
            </summary>
            <param name="bitmap">图像</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ToGrayArray2D(System.Drawing.Bitmap)">
            <summary>
            将图像转换为 byte[,]灰度值二维数组，后续所有操作都以二维数组作为中间变量
            </summary>
            <param name="bitmap">图像</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.GetGrayValue(System.Byte,System.Byte,System.Byte)">
            <summary>
            获取灰度值
            </summary>
            <param name="red">红</param>
            <param name="green">绿</param>
            <param name="blue">蓝</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ToGrayArray2D(System.Drawing.Color[0:,0:])">
            <summary>
            将颜色二维数组转换为 byte[,]灰度值二维数组
            </summary>
            <param name="pixels">颜色二维数组</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.GetGrayValue(System.Drawing.Color)">
            <summary>
            获取灰度值
            </summary>
            <param name="pixel">颜色</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ToBitmap(System.Drawing.Color[0:,0:])">
            <summary>
            将颜色二维数组转换为图像
            </summary>
            <param name="pixels">颜色二维数组</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ToBitmap(System.Byte[0:,0:])">
            <summary>
            将灰度值二维数组转换为图像
            </summary>
            <param name="grayBytes">灰度值二维数组</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.Binaryzation(System.Byte[0:,0:],System.Byte)">
            <summary>
            将灰度值二维数组二值化
            </summary>
            <param name="grayBytes">灰度值二维数组</param>
            <param name="gray">灰度值</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.DeepFore(System.Byte[0:,0:],System.Byte)">
            <summary>
            将灰度值二维数组前景色加黑
            </summary>
            <param name="grayBytes">灰度值二维数组</param>
            <param name="gray">灰度值</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ClearNoiseRound(System.Byte[0:,0:],System.Byte,System.Int32)">
            <summary>
            去除附近噪音，周边有效点数的方式（适合杂点/细线）
            </summary>
            <param name="binBytes">二进制数组</param>
            <param name="gray">灰度值</param>
            <param name="maxNearPoints">噪点阀值</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ClearNoiseArea(System.Byte[0:,0:],System.Byte,System.Int32)">
            <summary>
            去除区域噪音，联通域降噪方式，去除连通点数小于阀值的连通区域
            </summary>
            <param name="binBytes">二进制数组</param>
            <param name="gray">灰度值</param>
            <param name="minAreaPoints">噪点阀值</param>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.IsBlack(System.Byte)">
            <summary>
            是否黑色
            </summary>
            <param name="value">颜色值</param>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.Copy(System.Byte[0:,0:])">
            <summary>
            复制一份二维数组的副本
            </summary>
            <param name="bytes">二维数组</param>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.FloodFill(System.Byte[0:,0:],System.Drawing.Point,System.Byte)">
            <summary>
            泛水填充算法，将相连通的区域使用指定灰度值填充
            </summary>
            <param name="binBytes">二进制数组</param>
            <param name="point">点坐标</param>
            <param name="replacementGray">填充灰度值</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.FloodFill(System.Byte[0:,0:],System.Drawing.Point,System.Byte,System.Drawing.Point[]@)">
            <summary>
            泛水填充算法，将相连通的区域使用指定灰度值填充
            </summary>
            <param name="binBytes">二进制数组</param>
            <param name="point">点坐标</param>
            <param name="replacementGray">填充灰度值</param>
            <param name="points">已填充灰度值的点坐标数组</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ClearBorder(System.Byte[0:,0:],System.Int32)">
            <summary>
            去除图片边框
            </summary>
            <param name="grayBytes">灰度值二维数组</param>
            <param name="border">边框宽度</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.AddBorder(System.Byte[0:,0:],System.Int32,System.Byte)">
            <summary>
            添加图片边框，默认白色
            </summary>
            <param name="grayBytes">灰度值二维数组</param>
            <param name="border">边框宽度</param>
            <param name="gray">灰度值</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.DrawTo(System.Byte[0:,0:],System.Byte[0:,0:],System.Int32,System.Int32)">
            <summary>
            将小图画到大图中
            </summary>
            <param name="smallBytes">小图二维数组</param>
            <param name="bigBytes">大图二维数组</param>
            <param name="x1">边框横坐标</param>
            <param name="y1">边框纵坐标</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ClearGray(System.Byte[0:,0:],System.Byte,System.Byte)">
            <summary>
            去除指定范围的灰度
            </summary>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ToValid(System.Byte[0:,0:],System.Byte)">
            <summary>
            去除空白边界获取有效的图形
            </summary>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.Clone(System.Byte[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            从原矩阵中复制指定矩阵
            </summary>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ShadowY(System.Byte[0:,0:])">
            <summary>
            统计二维二值化数组的的竖直投影
            </summary>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ShadowX(System.Byte[0:,0:])">
            <summary>
            统计二维二值化数组的横向投影
            </summary>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.SplitShadowY(System.Byte[0:,0:],System.Byte,System.Byte)">
            <summary>
            根据二值化数组的竖直投影数据分割图片
            </summary>
            <param name="binBytes">二维二值化数组</param>
            <param name="minFontWidth">最小字符宽度，0则自动</param>
            <param name="minLines">最小有效投影行数</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Extensions.BitmapExtensions.ToCodeString(System.Byte[0:,0:],System.Byte,System.Boolean)">
            <summary>
            将二维二值化数组转换为特征码字符串
            </summary>
        </member>
        <member name="T:XUCore.Drawing.CaptchaBuilder">
            <summary>
            验证码生成器
            </summary>
        </member>
        <member name="F:XUCore.Drawing.CaptchaBuilder.Random">
            <summary>
            随机数
            </summary>
        </member>
        <member name="F:XUCore.Drawing.CaptchaBuilder.Seed">
            <summary>
            生成种子
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.FontNames">
            <summary>
            字体名称集合
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.FontNamesForChinese">
            <summary>
            汉字字体名称集合
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.FontSize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.FontWidth">
            <summary>
            字体宽度
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.Height">
            <summary>
            图片高度
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.Background">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.HasBorder">
            <summary>
            是否有边框
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.RandomPosition">
            <summary>
            是否随机位置
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.RandomColor">
            <summary>
            是否随机颜色
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.RandomItalic">
            <summary>
            是否随机倾斜字体
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.RandomPointPercent">
            <summary>
            随机干扰点百分比（百分数形式）
            </summary>
        </member>
        <member name="P:XUCore.Drawing.CaptchaBuilder.RandomLineCount">
            <summary>
            随机干扰线数量
            </summary>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.#ctor">
            <summary>
            初始化一个<see cref="T:XUCore.Drawing.CaptchaBuilder"/>类型的实例
            </summary>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetCode(System.Int32,XUCore.Drawing.CaptchaType)">
            <summary>
            获取指定长度的验证码字符串
            </summary>
            <param name="length">长度</param>
            <param name="captchaType">验证码类型</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetRandomNumbers(System.Int32)">
            <summary>
            获取随机数字的字符串
            </summary>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetRandomNumbersAndLetters(System.Int32)">
            <summary>
            获取随机数字与字母的字符串
            </summary>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetRandomChinese(System.Int32)">
            <summary>
            获取随机汉字的字符串
            </summary>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GenerateChinese">
            <summary>
            生成汉字
            </summary>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.CreateImage(System.String)">
            <summary>
            创建指定字符串的验证码图片
            </summary>
            <param name="code">验证码</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.DrawBorder(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            绘制边框
            </summary>
            <param name="g">绘制器</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetFontSize(System.Int32,System.Int32)">
            <summary>
            获取文字大小
            </summary>
            <param name="imageWidth">图片宽度</param>
            <param name="captchCodeCount">验证码长度</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetRandomDeepColor">
            <summary>
            获取随机深色
            </summary>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetRandomLightColor">
            <summary>
            获取随机浅色
            </summary>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.DrawDisorderLine(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            绘制干扰线
            </summary>
            <param name="g">绘制器</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetDisorderColor">
            <summary>
            获取干扰颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.IsBgLight">
            <summary>
            是否背景高亮
            </summary>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.DrawDisorderPoint(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            绘制干扰点
            </summary>
            <param name="g">绘制器</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.DrawText(System.Drawing.Graphics,System.String,System.Int32)">
            <summary>
            绘制文本
            </summary>
            <param name="g">绘制器</param>
            <param name="code">验证码</param>
            <param name="height">高度</param>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetTextColor">
            <summary>
            获取文本颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetFont(System.String)">
            <summary>
            获取文本字体
            </summary>
            <param name="code">验证码</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.GetPosition(System.Int32,System.Int32)">
            <summary>
            获取位置
            </summary>
            <param name="index">当前字符索引</param>
            <param name="height">图片高度</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.FontItalic(System.Drawing.Graphics)">
            <summary>
            倾斜字体
            </summary>
            <param name="g">绘制器</param>
        </member>
        <member name="M:XUCore.Drawing.CaptchaBuilder.CreateImage(System.Int32,System.String@,XUCore.Drawing.CaptchaType)">
            <summary>
            获取指定长度的验证码图片
            </summary>
            <param name="length">长度</param>
            <param name="code">验证码</param>
            <param name="captchaType">验证码类型</param>
            <returns></returns>
        </member>
        <member name="T:XUCore.Drawing.CaptchaType">
            <summary>
            验证码类型
            </summary>
        </member>
        <member name="F:XUCore.Drawing.CaptchaType.Number">
            <summary>
            纯数值
            </summary>
        </member>
        <member name="F:XUCore.Drawing.CaptchaType.NumberAndLetter">
            <summary>
            数值与字母组合
            </summary>
        </member>
        <member name="F:XUCore.Drawing.CaptchaType.ChineseChar">
            <summary>
            汉字
            </summary>
        </member>
        <member name="T:XUCore.Drawing.ImageHelper">
            <summary>
            图片操作辅助类 - 转换
            </summary>
            <summary>
            图片操作辅助类
            </summary>
            <summary>
            图片操作辅助类 - 信息
            </summary>
            <summary>
            图片操作辅助类 - 加载
            </summary>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToBytes(System.Drawing.Bitmap)">
            <summary>
            将图像转换为字节数组
            </summary>
            <param name="bitmap">图像</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToBytes(System.Drawing.Image)">
            <summary>
            将图片转换成字节数组
            </summary>
            <param name="image">图片</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToStream(System.Drawing.Image)">
            <summary>
            将图片转换为内存流，需要释放资源
            </summary>
            <param name="image">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToStream(System.Drawing.Bitmap)">
            <summary>
            将图像转换为内存流，需要释放资源
            </summary>
            <param name="bitmap">图像</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToBase64String(System.Drawing.Image,System.Boolean)">
            <summary>
            将图片转换为Base64字符串
            </summary>
            <param name="image">图片</param>
            <param name="appendPrefix">是否追加前缀</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToBase64String(System.Drawing.Image,System.Drawing.Imaging.ImageFormat,System.Boolean)">
            <summary>
            将图片转换为Base64字符串
            </summary>
            <param name="image">图片</param>
            <param name="imageFormat">图片格式</param>
            <param name="appendPrefix">是否追加前缀</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToBase64String(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            将图像转换为Base64字符串
            </summary>
            <param name="bitmap">图像</param>
            <param name="appendPrefix">是否追加前缀</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToBase64String(System.Drawing.Bitmap,System.Drawing.Imaging.ImageFormat,System.Boolean)">
            <summary>
            将图像转换为Base64字符串
            </summary>
            <param name="bitmap">图像</param>
            <param name="imageFormat">图片格式</param>
            <param name="appendPrefix">是否追加前缀</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32)">
            <summary>
            生成缩略图（指定最大高宽，自动选择不变形缩放）
            </summary>
            <param name="sourceImagePath">源文件路径</param>
            <param name="destImage">裁剪后的存储地址</param>
            <param name="maxWH">最大高宽，标识指定高宽不得超过该值</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.MakeThumbnail(System.Drawing.Image,System.Int32)">
            <summary>
            生成缩略图（指定最大高宽，自动选择不变形缩放）
            </summary>
            <param name="sourceImage">源图</param>
            <param name="maxWH">最大高宽，标识指定高宽不得超过该值</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.MakeThumbnail(System.Drawing.Image,System.Int32,System.Int32,XUCore.Drawing.ThumbnailMode)">
            <summary>
            生成缩略图
            </summary>
            <param name="sourceImage">源图</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">缩略图方式</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.MakeThumbnail(System.Byte[],System.Int32,System.Int32,XUCore.Drawing.ThumbnailMode)">
            <summary>
            生成缩略图
            </summary>
            <param name="imgBytes">源文件字节数组</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">缩略图方式</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,XUCore.Drawing.ThumbnailMode)">
            <summary>
            生成缩略图
            </summary>
            <param name="sourceImagePath">源文件路径</param>
            <param name="thumbnailPath">缩略图文件生成路径</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">缩略图方式</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ZoomImage(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            等比例缩放图片
            </summary>
            <param name="sourcePath">源文件地址</param>
            <param name="destPath">压缩后的存储地址</param>
            <param name="ratio">缩放比例1-100</param>
            <param name="minRatio">缩放比例边界（最小比例，当达到最小边界，不管文件多大都会停止压缩）</param>
            <param name="quality">压缩质量（数字越小压缩率越高）1-100</param>
            <param name="maxSize">压缩后最大大小（kb）</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ZoomImage(System.Drawing.Image,System.String,System.Int32,System.Int32)">
            <summary>
            等比例缩放图片
            </summary>
            <param name="sourImage">源图</param>
            <param name="destPath">压缩后的存储地址</param>
            <param name="ratio">缩放比例1-100</param>
            <param name="quality">压缩质量（数字越小压缩率越高）1-100</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ZoomImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            等比例缩放图片
            </summary>
            <param name="sourImage">源图</param>
            <param name="ratio">缩放比例1-100</param>
            <param name="quality">压缩质量（数字越小压缩率越高）1-100</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ZoomImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32)">
            <summary>
            等比例缩放图片
            </summary>
            <param name="sourImage"></param>
            <param name="destHeight"></param>
            <param name="destWidth"></param>
            <param name="quality">压缩质量（数字越小压缩率越高）1-100</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.DeleteCoordinate(System.String)">
            <summary>
            删除图片中的经纬度信息，覆盖原图像
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.DeleteCoordinate(System.String,System.String)">
            <summary>
            删除图片中的经纬度信息，并另存为
            </summary>
            <param name="filePath">文件路径</param>
            <param name="savePath">保存文件路径</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.DeleteCoordinate(System.Drawing.Image)">
            <summary>
            删除图片中的经纬度信息
            </summary>
            <param name="image">图片</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.BrightnessHandle(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            亮度处理
            </summary>
            <param name="bitmap">图片</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="val">增加或减少的光暗值</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.FilterColor(System.Drawing.Bitmap)">
            <summary>
            滤色处理
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.LeftRightTurn(System.Drawing.Bitmap)">
            <summary>
            左右翻转
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.TopBottomTurn(System.Drawing.Bitmap)">
            <summary>
            上下翻转
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.ToBlackWhiteImage(System.Drawing.Bitmap)">
            <summary>
            转换为黑白图片
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="bitmap">图片</param>
            <param name="isTwist">是否扭曲，true:扭曲,false:不扭曲</param>
            <param name="shapeMultValue">波形的幅度倍数，越大扭曲的程度越高，默认为3</param>
            <param name="shapePhase">波形的起始相位，取值区间[0-2*PI]</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.Rotate(System.Drawing.Bitmap,System.Int32)">
            <summary>
            图片旋转，使图像绕中心点旋转一定角度
            </summary>
            <param name="bitmap">图片</param>
            <param name="angle">旋转的角度，正值为逆时针方向</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.Gray(System.Drawing.Bitmap)">
            <summary>
            图片灰度化
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.Plate(System.Drawing.Bitmap)">
            <summary>
            底片效果
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.Emboss(System.Drawing.Bitmap)">
            <summary>
            浮雕效果
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.Soften(System.Drawing.Bitmap)">
            <summary>
            柔化效果
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.Sharpen(System.Drawing.Bitmap)">
            <summary>
            锐化效果
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.Atomizing(System.Drawing.Bitmap)">
            <summary>
            雾化效果
            </summary>
            <param name="bitmap">图片</param>
            <returns></returns>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.GetImageExtension(System.Drawing.Image)">
            <summary>
            获取图片扩展名
            </summary>
            <param name="image">图片</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.GetCodecInfo(System.Drawing.Image)">
            <summary>
            获取特定图像编解码信息
            </summary>
            <param name="image">图片</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.GetCodecInfo(System.Drawing.Imaging.ImageFormat)">
            <summary>
            获取特定图像编解码信息
            </summary>
            <param name="imageFormat">图片格式</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.FromFile(System.String)">
            <summary>
            从指定文件创建图片
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.FromStream(System.IO.Stream)">
            <summary>
            从指定流创建图片
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.FromBytes(System.Byte[])">
            <summary>
            从指定字节数组创建图片
            </summary>
            <param name="bytes">字节数组</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.FromBase64String(System.String)">
            <summary>
            从指定Base64字符串创建图片
            </summary>
            <param name="base64String">Base64字符串</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.GetBytesFromBase64String(System.String)">
            <summary>
            从指定Base64字符串转换bytes
            </summary>
            <param name="base64String">Base64字符串</param>
        </member>
        <member name="M:XUCore.Drawing.ImageHelper.GetBase64String(System.String)">
            <summary>
            获取真正的图片Base64数据。
            即去掉data:image/jpg;base64,这样的格式
            </summary>
            <param name="base64String">带前缀的Base64图片字符串</param>
        </member>
        <member name="T:XUCore.Drawing.ImageLocationMode">
            <summary>
            图片位置模式
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.LeftTop">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.Top">
            <summary>
            靠上
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.RightTop">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.LeftCenter">
            <summary>
            左中
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.RightCenter">
            <summary>
            右中
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.LeftBottom">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.Bottom">
            <summary>
            靠下
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ImageLocationMode.RightBottom">
            <summary>
            右下角
            </summary>
        </member>
        <member name="T:XUCore.Drawing.ThumbnailMode">
            <summary>
            缩略图模式
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ThumbnailMode.Cut">
            <summary>
            指定宽高裁剪（不变形）
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ThumbnailMode.FixedW">
            <summary>
            指定宽度，高度自动
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ThumbnailMode.FixedH">
            <summary>
            指定高度，宽度自动
            </summary>
        </member>
        <member name="F:XUCore.Drawing.ThumbnailMode.FixedBoth">
            <summary>
            指定宽高（变形）
            </summary>
        </member>
    </members>
</doc>
